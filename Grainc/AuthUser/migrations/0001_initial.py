# Generated by Django 5.1.3 on 2024-11-05 09:25

import AuthUser.models
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='ServiceUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('email', models.EmailField(max_length=255, unique=True, verbose_name='email')),
                ('username', models.CharField(max_length=10)),
                ('profile_image', models.ImageField(blank=True, upload_to=AuthUser.models.user_profile_image_path)),
                ('introduction', models.TextField(blank=True)),
                ('is_social_account', models.BooleanField(default=False)),
                ('social_account_provider', models.CharField(blank=True, max_length=100, null=True)),
                ('social_account_detail', models.TextField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=False)),
                ('is_admin', models.BooleanField(default=False)),
                ('article_count', models.PositiveBigIntegerField(default=0)),
                ('likes_count', models.PositiveIntegerField(default=0)),
                ('is_membership', models.BooleanField(default=False)),
                ('was_membership', models.BooleanField(default=False)),
                ('donation_message', models.CharField(blank=True, default=0, null=True)),
                ('membership_renew_date', models.DateField(default=django.utils.timezone.now)),
                ('membership_expire_date', models.DateField(default=django.utils.timezone.now)),
                ('membership_donation_cash', models.PositiveIntegerField(default=0)),
                ('signup_verification_code', models.PositiveBigIntegerField(blank=True, null=True)),
                ('email_verification_link_generated_at', models.DateTimeField(blank=True, null=True)),
                ('password_reset_verification_code', models.PositiveBigIntegerField(blank=True, null=True)),
                ('password_reset_link_generated_at', models.DateTimeField(blank=True, null=True)),
                ('community_restriction', models.BooleanField(default=False)),
                ('violation_detail_community', models.TextField(blank=True, null=True)),
                ('sign_up_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('last_active_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('subscribers', models.ManyToManyField(blank=True, related_name='user_subscribers', to=settings.AUTH_USER_MODEL)),
                ('subscribing_user', models.ManyToManyField(blank=True, related_name='user_subscribing', to=settings.AUTH_USER_MODEL)),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='UserFCMToken',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fcm_token', models.CharField(max_length=500, unique=True)),
                ('is_push_notification', models.BooleanField(default=True)),
                ('is_article_notification', models.BooleanField(default=True)),
                ('is_comment_notification', models.BooleanField(default=True)),
                ('is_comment_reply_notification', models.BooleanField(default=True)),
                ('is_donation_notification', models.BooleanField(default=True)),
                ('is_donation_withdrawal_notification', models.BooleanField(default=True)),
                ('is_announcement_notification', models.BooleanField(default=True)),
                ('is_inquiry_notification', models.BooleanField(default=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
