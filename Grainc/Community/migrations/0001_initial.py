# Generated by Django 5.1.3 on 2024-11-05 09:25

import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Community_Article_Comment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('comment', models.TextField()),
                ('reply_count', models.PositiveBigIntegerField(default=0)),
                ('author', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='comment_author', to=settings.AUTH_USER_MODEL)),
                ('comment_likes', models.ManyToManyField(blank=True, related_name='comment_likes', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Community_Article_Comment_Reply',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('reply', models.TextField()),
                ('author', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('reply_comment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Community.community_article_comment')),
            ],
        ),
        migrations.CreateModel(
            name='Community_Articles',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('subject', models.CharField(max_length=100)),
                ('category', models.CharField(blank=True, max_length=50, null=True)),
                ('sub_category', models.CharField(blank=True, max_length=50, null=True)),
                ('hashtags', models.JSONField(blank=True, null=True)),
                ('main_content', models.TextField()),
                ('views', models.PositiveIntegerField(default=0)),
                ('comments', models.PositiveBigIntegerField(default=0)),
                ('images', models.BooleanField()),
                ('saved_article', models.BooleanField(default=False)),
                ('is_hidden_admin', models.BooleanField(default=False)),
                ('is_membership', models.BooleanField(default=False, null=True)),
                ('unique_folder_name', models.CharField(blank=True, max_length=100, null=True)),
                ('author', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('likes', models.ManyToManyField(blank=True, related_name='likes', to=settings.AUTH_USER_MODEL)),
                ('views_validation', models.ManyToManyField(blank=True, related_name='views_validation', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='community_article_comment',
            name='article',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Community.community_articles'),
        ),
        migrations.CreateModel(
            name='CommunityBookmarkFolder',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('folder_name', models.CharField(max_length=20)),
                ('create_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('bookmarks', models.ManyToManyField(blank=True, to='Community.community_articles')),
                ('folder_owner', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='CommunityBookmark',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order_added', models.DateTimeField(auto_now_add=True)),
                ('bookmark_article', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Community.community_articles')),
                ('bookmark_folder', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Community.communitybookmarkfolder')),
            ],
            options={
                'ordering': ['order_added'],
            },
        ),
        migrations.CreateModel(
            name='ReportedArticlesComments',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('type', models.CharField(max_length=100)),
                ('detail', models.TextField(blank=True, null=True)),
                ('is_task_done', models.BooleanField(default=False)),
                ('reported_article', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='Community.community_articles')),
                ('reported_comment', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='Community.community_article_comment')),
                ('reported_comment_reply', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='Community.community_article_comment_reply')),
                ('reported_user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Community_Membership_Article_Free_Trial',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('view_date', models.DateField(default=django.utils.timezone.now)),
                ('article', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Community.community_articles')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'unique_together': {('user', 'article', 'view_date')},
            },
        ),
    ]
